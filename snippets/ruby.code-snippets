{
  "New class": {
    "prefix": [
      "class",
      "cla"
    ],
    "body": [
      "class $1",
      "  def initialize",
      "    $0",
      "  end",
      "end",
      ""
    ],
    "description": "New Ruby class."
  },
  "New module": {
    "prefix": [
      "module",
      "mod"
    ],
    "body": [
      "module $1",
      "  def $2",
      "    $0",
      "  end",
      "end",
      ""
    ],
    "description": "New Ruby module."
  },
  "Begin block": {
    "prefix": [
      "begin",
      "beg"
    ],
    "body": [
      "begin",
      "  $0",
      "end",
      ""
    ],
    "description": "New Ruby begin block."
  },
  "Begin rescue block": {
    "prefix": [
      "begin",
      "begr"
    ],
    "body": [
      "begin",
      "  $0",
      "rescue $1",
      "end",
      ""
    ],
    "description": "New Ruby begin block with rescue."
  },
  "Begin rescue ensure": {
    "prefix": [
      "begin",
      "begrn"
    ],
    "body": [
      "begin",
      "  $0",
      "rescue $1",
      "ensure",
      "end",
      ""
    ],
    "description": "New Ruby begin block with rescue and ensure."
  },
  "While": {
    "prefix": [
      "while",
      "wh"
    ],
    "body": [
      "while $1",
      "  $0",
      "end",
      ""
    ],
    "description": "New Ruby while loop."
  },
  "Until": {
    "prefix": [
      "until",
      "unt"
    ],
    "body": [
      "until $1",
      "  $0",
      "end",
      ""
    ],
    "description": "New Ruby until loop."
  },
  "For": {
    "prefix": [
      "for"
    ],
    "body": [
      "for $1 in $2",
      "  $0",
      "end",
      ""
    ],
    "description": "New Ruby for loop."
  },
  "Each inline": {
    "prefix": [
      "each",
      "ea"
    ],
    "body": [
      "each { |$1| $0 }"
    ],
    "description": "New Ruby inline each loop."
  },
  "Each block": {
    "prefix": [
      "each",
      "eachb",
      "eab"
    ],
    "body": [
      "each do |$1|",
      "  $0",
      "end"
    ],
    "description": "New Ruby each loop."
  },
  "Map inline": {
    "prefix": [
      "map"
    ],
    "body": [
      "map { |$1| $0 }"
    ],
    "description": "New Ruby inline map loop."
  },
  "Map block": {
    "prefix": [
      "map",
      "mapb"
    ],
    "body": [
      "map do |$1|",
      "  $0",
      "end"
    ],
    "description": "New Ruby map loop."
  },
  "Flat map inline": {
    "prefix": [
      "flat_map",
      "fmap"
    ],
    "body": [
      "flat_map { |$1| $0 }"
    ],
    "description": "New Ruby inline flat_map loop."
  },
  "Flat Map block": {
    "prefix": [
      "flat_map"
    ],
    "body": [
      "flat_map do |$1|",
      "  $0",
      "end"
    ],
    "description": "New Ruby flat_map loop."
  },
  "Select inline": {
    "prefix": [
      "select",
      "sl"
    ],
    "body": [
      "select { |$1| $0 }"
    ],
    "description": "New Ruby inline select loop."
  },
  "Select block": {
    "prefix": [
      "select",
      "slb"
    ],
    "body": [
      "select do |$1|",
      "  $0",
      "end"
    ],
    "description": "New Ruby select loop."
  },
  "Find inline": {
    "prefix": [
      "find"
    ],
    "body": [
      "find { |$1| $0 }"
    ],
    "description": "New Ruby inline find loop."
  },
  "Find block": {
    "prefix": [
      "find",
      "findb"
    ],
    "body": [
      "find do |$1|",
      "  $0",
      "end"
    ],
    "description": "New Ruby find loop."
  },
  "Active record find": {
    "prefix": [
      "rfind",
      "find",
      "rf"
    ],
    "body": [
      "find($1)"
    ],
    "description": "New ActiveRecord find."
  },
  "Active record find by": {
    "prefix": [
      "find_by",
      "rfb"
    ],
    "body": [
      "find_by($1)"
    ],
    "description": "New ActiveRecord find_by."
  },
  "Define method": {
    "prefix": [
      "def"
    ],
    "body": [
      "def $1",
      "  $0",
      "end"
    ],
    "description": "New Ruby method."
  },
  "Define singleton method": {
    "prefix": [
      "def",
      "sdef"
    ],
    "body": [
      "def self.$1",
      "  $0",
      "end"
    ],
    "description": "New singleton method."
  },
  "Define attribute accessor": {
    "prefix": [
      "attr"
    ],
    "body": [
      "attr_accessor :$1"
    ],
    "description": "New attribute accessor."
  },
  "Define attribute reader": {
    "prefix": [
      "attr"
    ],
    "body": [
      "attr_reader :$1"
    ],
    "description": "New attribute reader."
  },
  "Define attribute writer": {
    "prefix": [
      "attr"
    ],
    "body": [
      "attr_writer :$1"
    ],
    "description": "New attribute writer."
  },
  "If": {
    "prefix": [
      "if"
    ],
    "body": [
      "if $1",
      "  $0",
      "end"
    ],
    "description": "New if statement."
  },
  "If else": {
    "prefix": [
      "if"
    ],
    "body": [
      "if $1",
      "  $0",
      "else",
      "end"
    ],
    "description": "New if statement with else."
  },
  "If elsif": {
    "prefix": [
      "if"
    ],
    "body": [
      "if $1",
      "  $0",
      "elsif $2",
      "  $0",
      "end"
    ],
    "description": "New if statement with elsif."
  },
  "Unless": {
    "prefix": [
      "unless"
    ],
    "body": [
      "unless $1",
      "  $0",
      "end"
    ],
    "description": "New unless statement."
  }
}